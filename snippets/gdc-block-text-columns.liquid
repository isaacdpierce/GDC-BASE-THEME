{%- liquid 
  assign column_count = 0
  assign title_1 = block.settings.title_1
  assign title_2 = block.settings.title_2
  assign title_3 = block.settings.title_3
  assign title_4 = block.settings.title_4

  assign text_1 = block.settings.text_1
  assign text_2 = block.settings.text_2
  assign text_3 = block.settings.text_3
  assign text_4 = block.settings.text_4
-%}


<div class="gdc-block__text-columns-section block--{{ block.id}} {{ hide_mobile }} {{ hide_tablets }}">
  <div class="gdc-block__text-columns block--{{ block.id}}">
    {% if title_1 != blank or text_1 != blank %}
      {% assign column_count = column_count | plus: 1 %}
      <div class="gdc-block__text-column block--{{ block.id }}">
        {% render 'gdc-block-paragraph',  block: block, title: title_1, text: text_1 %}
      </div>
    {% endif %}

    {% if title_2 != blank or text_2 != blank %}
      {% assign column_count = column_count | plus: 1 %}
      <div class="gdc-block__text-column block--{{ block.id }}">
        {% render 'gdc-block-paragraph',  block: block, title: title_2, text: text_2 %}
      </div>
    {% endif %}

    {% if title_3 != blank or text_3 != blank %}
      {% assign column_count = column_count | plus: 1 %}
      <div class="gdc-block__text-column block--{{ block.id }}">
        {% render 'gdc-block-paragraph',  block: block, title: title_3, text: text_3 %}
      </div>
    {% endif %}

    {% if title_4 != blank or text_4 != blank %}
      {% assign column_count = column_count | plus: 1 %}
      <div class="gdc-block__text-column block--{{ block.id }}">
        {% render 'gdc-block-paragraph',  block: block, title: title_4, text: text_4 %}
      </div>
    {% endif %}
  </div>
</div>

<style>
  .gdc-block__text-columns-section.block--{{ block.id }} {
    margin-top: {{ block.settings.t_margin }};
    margin-bottom: {{ block.settings.b_margin }};
    padding-top: {{ block.settings.t_padding }};
    padding-bottom: {{ block.settings.b_padding }};
  }
  
  .gdc-block__text-columns.block--{{ block.id }} {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    background-color: {{ block.settings.bg_color }};
  }

  .gdc-block__text-columns.block--{{ block.id }} h2 {
    color: {{ block.settings.font_color }};
    text-align: {{ block.settings.title_align }};
  }

  .gdc-block__text-columns.block--{{ block.id }} p {
    color: {{ block.settings.font_color }};
    text-align: {{ block.settings.text_align }};
  }

  .gdc-block__text-column.block--{{ block.id}} {
    width: calc(100% / {{ column_count }});
    min-width: 180px;
  }

  {% if block.settings.mobile_wrap == 'half' %}
    @media (max-width: 800px) {
      .gdc-block__text-column.block--{{ block.id}} { 
        width: calc(100% /  2);
      }
    } 

    @media (max-width: 500px) {
      .gdc-block__text-column.block--{{ block.id}} { 
        width: 100%;
      }
    } 
  {% endif %}
  
  {% if block.settings.mobile_wrap == 'stack' %}
    @media (max-width: 800px) {
        .gdc-block__text-column.block--{{ block.id}} { 
          width: 100%;
        }
      }
  {% endif %}
</style>
